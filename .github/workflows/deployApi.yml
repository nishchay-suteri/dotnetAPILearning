# github action to deploy dotnet api to azure

name: Deply dotnet web api

on:
    workflow_dispatch: # manually running action instead of automatic push/merge/etc.

env:
  AZURE_WEBAPP_NAME: 'app-learningapi-cind-dev-001' # name of the azure web app
  AZURE_WEBAPP_PACKAGE_PATH: './publish' # path to the publish folder

permissions:
  checks: write
  pull-requests: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout Repo
            - uses: actions/checkout@v4
            
            # Setup dotnet
            - name: Setup dotnet core
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: 8.0.x
            
            # dotnet restore
            - name: Install Dependencies
              run: dotnet restore ./LearningAPI/LearningAPI.csproj
            
            # dotnet build
            - name: Build API Project
              run: dotnet build ./LearningAPI/LearningAPI.csproj --configuration Release --no-restore

            - name: Restore & Build Test Project
              run: dotnet build ./LearningAPITest/LearningAPITest.csproj --configuration Release

            - name: Test
              run: dotnet test ./LearningAPITest/LearningAPITest.csproj --configuration Release --no-build --verbosity normal --logger trx --results-directory TestResults --collect "XPlat Code Coverage"

            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action@v2
              if: always()
              with:
                files: "./TestResults/*.trx"

            - name: Code Coverage Report
              uses: irongut/CodeCoverageSummary@v1.3.0
              with:
                filename: ./TestResults/**/coverage.cobertura.xml
                badge: true
                fail_below_min: true
                format: markdown
                hide_branch_rate: false
                hide_complexity: true
                indicators: true
                output: both
                thresholds: '60 80'
          
            # dotnet publish
            - name: Publish
              run: dotnet publish ./LearningAPI/LearningAPI.csproj --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

            # deploy to azure
            - name: Deploy to Azure Web App
              uses: azure/webapps-deploy@v3
              with:
                app-name: ${{ env.AZURE_WEBAPP_NAME }}
                publish-profile: ${{ secrets.API_PUBLISH_SECRET }}
                package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}